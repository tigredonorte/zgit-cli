import simpleGit, { SimpleGit } from 'simple-git';
import { BranchHelper, IBranchHelper, IParentHelper, ParentHelper } from '../../helpers';
import { ICommand } from '../ICommand';


export class UpCommand implements ICommand {

  public constructor(
    private git: SimpleGit = simpleGit(),
    private branchHelper: IBranchHelper = new BranchHelper(git),
    private parentHelper: IParentHelper = new ParentHelper(git),
  ) {}

  help(): string {
    return 'Usage: zgit-cli up\n' +
           'Switches to the first sibling branch found in the list generated by \'git branch\'.';
  }

  async execute(): Promise<void> {
    try {
      const currentBranch = await this.branchHelper.getCurrentBranch();
      const { firstParent } = await this.parentHelper.getParent(currentBranch);

      if (!firstParent) {
        throw new Error('No sibling branches found.');
      }

      await this.git.checkout(firstParent);
      console.info(`Switched to branch ${firstParent}`);
    } catch (error) {
      console.error('UpCommand Error:', error instanceof Error ? error.message : error);
      throw error;
    }
  }
}